---
---

<div class="ship-timeline">
    <div class="ship-container">
        <div class="ship">
            <div class="hull" data-part="hull"></div>
            <div class="deck" data-part="deck"></div>
            <div class="mast" data-part="mast"></div>
            <div class="sail" data-part="sail"></div>
            <div class="rudder" data-part="rudder"></div>
        </div>
        <div class="water"></div>
    </div>

    <div class="timeline-controls">
        <input type="range" min="0" max="100" value="0" class="timeline-slider" id="timelineSlider">
        <div class="timeline-labels">
            <span>Original Ship</span>
            <span>Replacement Progress: <span id="progressValue">0%</span></span>
            <span>Final State</span>
        </div>
    </div>

    <div class="part-indicators">
        <div class="indicator" data-part="hull">Hull: <span>Original</span></div>
        <div class="indicator" data-part="deck">Deck: <span>Original</span></div>
        <div class="indicator" data-part="mast">Mast: <span>Original</span></div>
        <div class="indicator" data-part="sail">Sail: <span>Original</span></div>
        <div class="indicator" data-part="rudder">Rudder: <span>Original</span></div>
    </div>
</div>

<script>
    const slider = document.getElementById('timelineSlider');
    const progressValue = document.getElementById('progressValue');
    const ship = document.querySelector('.ship');
    const indicators = document.querySelectorAll('.indicator');

    const parts = ['hull', 'deck', 'mast', 'sail', 'rudder'];
    const replacementThresholds = {
        hull: 20,
        deck: 40,
        mast: 60,
        sail: 80,
        rudder: 90
    };

    slider.addEventListener('input', (e) => {
        const value = parseInt(e.target.value);
        progressValue.textContent = `${value}%`;

        parts.forEach(part => {
            const element = ship.querySelector(`[data-part="${part}"]`);
            const indicator = document.querySelector(`.indicator[data-part="${part}"]`);
            
            if (value >= replacementThresholds[part]) {
                element.classList.add('replaced');
                indicator.querySelector('span').textContent = 'Replaced';
                indicator.classList.add('replaced');
            } else {
                element.classList.remove('replaced');
                indicator.querySelector('span').textContent = 'Original';
                indicator.classList.remove('replaced');
            }
        });
    });
</script>

<style>
    .ship-timeline {
        margin: 3rem 0;
        padding: 2rem;
        background: rgba(var(--accent-dark), 0.2);
        border-radius: 12px;
    }

    .ship-container {
        height: 300px;
        position: relative;
        overflow: hidden;
        background: linear-gradient(180deg, #1a1a2e 0%, #16213e 100%);
        border-radius: 8px;
    }

    .ship {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 300px;
        height: 200px;
    }

    .hull {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 60px;
        background: #8b4513;
        border-radius: 0 0 50% 50%;
        transition: background-color 0.5s ease;
    }

    .deck {
        position: absolute;
        bottom: 60px;
        width: 80%;
        height: 20px;
        left: 10%;
        background: #a0522d;
        transition: background-color 0.5s ease;
    }

    .mast {
        position: absolute;
        bottom: 80px;
        left: 50%;
        width: 10px;
        height: 100px;
        background: #8b4513;
        transform: translateX(-50%);
        transition: background-color 0.5s ease;
    }

    .sail {
        position: absolute;
        bottom: 100px;
        left: 50%;
        width: 80px;
        height: 60px;
        background: #f4f4f4;
        transform: translateX(-50%);
        clip-path: polygon(50% 0%, 100% 100%, 0% 100%);
        transition: background-color 0.5s ease;
    }

    .rudder {
        position: absolute;
        bottom: 20px;
        right: 20px;
        width: 20px;
        height: 40px;
        background: #8b4513;
        transform: rotate(45deg);
        transition: background-color 0.5s ease;
    }

    .water {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 100px;
        background: linear-gradient(180deg, rgba(0,119,190,0.3) 0%, rgba(0,119,190,0.1) 100%);
        animation: wave 3s infinite linear;
    }

    .timeline-controls {
        margin: 2rem 0;
        text-align: center;
    }

    .timeline-slider {
        width: 80%;
        margin: 1rem 0;
    }

    .timeline-labels {
        display: flex;
        justify-content: space-between;
        margin-top: 0.5rem;
        color: rgba(255, 255, 255, 0.8);
        font-size: 0.9rem;
    }

    .part-indicators {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-top: 2rem;
    }

    .indicator {
        padding: 0.5rem;
        background: rgba(var(--accent-dark), 0.3);
        border-radius: 4px;
        text-align: center;
        transition: background-color 0.3s ease;
    }

    .replaced {
        background-color: rgba(var(--accent-light), 0.2);
    }

    [data-part].replaced {
        background-color: #4a90e2;
    }

    @keyframes wave {
        0% { transform: translateX(-50px); }
        100% { transform: translateX(50px); }
    }
</style>