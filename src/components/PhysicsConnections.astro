---
---

<section class="physics-connections">
    <h2>Physical Principles & Conservation Laws</h2>
    
    <div class="physics-grid">
        <div class="physics-card">
            <h3>Conservation of Energy</h3>
            <div class="animation-container">
                <div class="energy-transfer"></div>
            </div>
            <p>
                Even as parts are replaced, the total energy of the system remains constant, 
                similar to how energy transforms but is never created or destroyed.
            </p>
        </div>

        <div class="physics-card">
            <h3>Mechanical Systems</h3>
            <div class="animation-container">
                <div class="mechanical-system">
                    <div class="gear"></div>
                    <div class="gear delayed"></div>
                </div>
            </div>
            <p>
                The ship functions as an integrated mechanical system where each component 
                contributes to the overall functionality, like gears in a machine.
            </p>
        </div>

        <div class="physics-card">
            <h3>Structural Integrity</h3>
            <div class="animation-container">
                <div class="structure">
                    <div class="beam"></div>
                    <div class="force-arrow"></div>
                </div>
            </div>
            <p>
                The distribution of forces and loads must be maintained throughout the 
                replacement process to preserve the ship's stability.
            </p>
        </div>
    </div>
</section>

<style>
    .physics-connections {
        margin: 4rem 0;
        padding: 2rem;
        background: rgba(var(--accent-dark), 0.2);
        border-radius: 12px;
    }

    h2 {
        text-align: center;
        color: rgb(var(--accent-light));
        margin-bottom: 2rem;
    }

    .physics-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 2rem;
    }

    .physics-card {
        padding: 1.5rem;
        background: rgba(var(--accent-dark), 0.3);
        border-radius: 8px;
        border: 1px solid rgba(var(--accent-light), 0.2);
    }

    .physics-card h3 {
        color: rgb(var(--accent-light));
        text-align: center;
        margin-bottom: 1rem;
    }

    .animation-container {
        height: 150px;
        margin: 1rem 0;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .energy-transfer {
        width: 100px;
        height: 100px;
        background: linear-gradient(45deg, rgba(var(--accent), 0.5), rgba(var(--accent-light), 0.5));
        border-radius: 50%;
        animation: pulse 2s infinite;
    }

    .mechanical-system {
        position: relative;
        width: 150px;
        height: 150px;
    }

    .gear {
        position: absolute;
        width: 60px;
        height: 60px;
        border: 4px solid rgb(var(--accent-light));
        border-radius: 50%;
        left: 20px;
        top: 45px;
        animation: rotate 4s linear infinite;
    }

    .gear.delayed {
        left: 70px;
        animation: rotate 4s linear infinite reverse;
    }

    .gear::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 4px;
        background: rgb(var(--accent-light));
        top: 50%;
        transform: translateY(-50%);
    }

    .gear::after {
        content: '';
        position: absolute;
        width: 4px;
        height: 100%;
        background: rgb(var(--accent-light));
        left: 50%;
        transform: translateX(-50%);
    }

    .structure {
        position: relative;
        width: 100%;
        height: 100%;
    }

    .beam {
        width: 80%;
        height: 20px;
        background: rgb(var(--accent-light));
        margin: 65px auto;
        animation: stress 3s infinite;
    }

    .force-arrow {
        position: absolute;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-top: 20px solid rgb(var(--accent));
        animation: force 3s infinite;
    }

    @keyframes pulse {
        0%, 100% { transform: scale(1); opacity: 0.5; }
        50% { transform: scale(1.2); opacity: 0.8; }
    }

    @keyframes rotate {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }

    @keyframes stress {
        0%, 100% { transform: scaleY(1); }
        50% { transform: scaleY(0.8); }
    }

    @keyframes force {
        0%, 100% { transform: translateX(-50%) translateY(0); }
        50% { transform: translateX(-50%) translateY(20px); }
    }
</style>